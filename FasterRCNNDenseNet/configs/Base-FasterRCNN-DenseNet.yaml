MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  BACKBONE:
    NAME: "build_densenet_backbone"
    FREEZE_AT: 0   # layer in denseblock4
  DENSENET:
    OUT_FEATURES: ["SoleStage"]
    CONV_BODY: "densenet121"   # default model
  ANCHOR_GENERATOR:
    SIZES: [32, 64, 128, 256, 512]  # Five sizes for one feature map
    ASPECT_RATIOS: [0.5, 1.0, 2.0]  # Three aspect ratios
  RPN:
    IN_FEATURES: ["SoleStage"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 1000
  ROI_HEADS:
    NAME: "StandardROIHeads"
    # IN_FEATURES: ["p2", "p3", "p4", "p5"]
    IN_FEATURES: ["SoleStage"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
  # ROI_MASK_HEAD:
  #   NAME: "MaskRCNNConvUpsampleHead"
  #   NUM_CONV: 4
  #   POOLER_RESOLUTION: 14
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.001   # 0.02
  STEPS: (60000, 80000)   # [500,] used by AudubonF21
  MAX_ITER: 1000   # 90000 in example
INPUT:
  MIN_SIZE_TRAIN: (640,)